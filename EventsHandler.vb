'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports B1WizardBase
Imports SAPbobsCOM
Imports SAPbouiCOM
Imports InFile.net.ingface.www
Imports System.Xml
Imports System.Net
Imports System.IO
Imports System.Runtime.InteropServices
Imports System.Drawing.Printing

Namespace InFile

    Public Class EventsHandler
        Inherits B1Event

        Public Sub New()
            MyBase.New
        End Sub
        <DllImport("shell32")>
        Public Shared Function ShellExecute(ByVal hWnd As IntPtr,
                                        ByVal lpOperation As String,
                                        ByVal lpFile As String,
                                        ByVal lpParameters As String,
                                        ByVal lpDirectory As String,
                                        ByVal nShowCmd As Integer) As IntPtr
        End Function

        <B1Listener(BoEventTypes.et_FORM_DATA_ADD, False)>
        Public Overridable Sub OnAfterFormDataAdd(ByVal pVal As BusinessObjectInfo)
            Dim ActionSuccess As Boolean = pVal.ActionSuccess
            Dim form As Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
            Dim DataTable As SAPbouiCOM.DataTable
            Dim oRecordSet As SAPbobsCOM.Recordset
            Dim DtMC As System.Data.DataTable
            Dim oRutaPdf As String = ""
            Dim sQuery As String
            'ADD YOUR ACTION CODE HERE ...
            form = B1Connections.theAppl.Forms.ActiveForm


            Try

                If form.TypeEx = "133" Then

                    Dim oXML As New XmlDocument
                    Dim oXMLRet As New XmlDocument
                    Dim oXMLInterno As New XmlDocument
                    Dim xmlNodeRdr As XmlNodeReader
                    Dim sXML As String
                    Dim sUrl As String
                    Dim dsGenerarGuia As New DataSet()
                    Dim HttpReq As HttpWebRequest
                    Dim stream As StreamReader
                    oRecordSet = Nothing
                    oRecordSet = B1Connections.diCompany.GetBusinessObject(BoObjectTypes.BoRecordset)
                    sQuery = "Select * From OINV inner join INV1 on INV1.DocEntry = OINV.DocEntry Where DocNum = " & form.Items.Item("8").Specific.value
                    oRecordSet.DoQuery(sQuery)
                    If Not String.IsNullOrEmpty(oRecordSet.Fields.Item("CardCode").Value) Then


                        sXML = "<?xml version=""1.0""?>"
                        sXML &= "<S:Envelope xmlns:S=""http://schemas.xmlsoap.org/soap/envelope/"">"
                        sXML &= "   <S:Body>"
                        sXML &= "       <ns2:registrarDte xmlns:ns2=""http://listener.ingface.com/"">"
                        sXML &= "          <dte>"
                        sXML &= "               <clave>1EFD3458AA09572D52ACC0C7BC61DEE8D41D8CD98F00B204E9800998ECF8427E</clave>"
                        sXML &= "               <dte>"
                        sXML &= "                   <codigoEstablecimiento>1</codigoEstablecimiento>"
                        sXML &= "                   <codigoMoneda>GTQ</codigoMoneda>"
                        sXML &= "                   <correoComprador>demo@demo.com</correoComprador>"
                        sXML &= "                   <departamentoComprador>Guatemala</departamentoComprador>"
                        sXML &= "                   <departamentoVendedor>Guatemala</departamentoVendedor>"
                        sXML &= "                   <descripcionOtroImpuesto>N/A</descripcionOtroImpuesto>"
                        sXML &= "                   <detalleDte>"
                        sXML &= "                      <cantidad>" & oRecordSet.Fields.Item("Quantity").Value & "</cantidad>"
                        sXML &= "                       <codigoProducto>" & oRecordSet.Fields.Item("ItemCode").Value & "</codigoProducto>"
                        sXML &= "                       <descripcionProducto>" & oRecordSet.Fields.Item("Dscription").Value & "</descripcionProducto>"
                        sXML &= "                       <detalleImpuestosIva>24.0</detalleImpuestosIva>"
                        sXML &= "                       <importeExento>0.0</importeExento>"
                        sXML &= "                       <importeNetoGravado>" & oRecordSet.Fields.Item("DocTotal").Value & "</importeNetoGravado>"
                        sXML &= "                       <importeOtrosImpuestos>0.0</importeOtrosImpuestos>"
                        sXML &= "                       <importeTotalOperacion>" & oRecordSet.Fields.Item("DocTotal").Value & "</importeTotalOperacion>"
                        sXML &= "                       <montoBruto>" & oRecordSet.Fields.Item("PriceAfVAT").Value & "</montoBruto>"
                        sXML &= "                       <montoDescuento>" & (oRecordSet.Fields.Item("PriceAfVAT").Value - oRecordSet.Fields.Item("PriceBefDi").Value) & "</montoDescuento>"
                        sXML &= "                       <personalizado_01>N/A</personalizado_01>"
                        sXML &= "                       <personalizado_02>N/A</personalizado_02>"
                        sXML &= "                       <personalizado_03>N/A</personalizado_03>"
                        sXML &= "                       <personalizado_04>N/A</personalizado_04>"
                        sXML &= "                       <personalizado_05>N/A</personalizado_05>"
                        sXML &= "                       <personalizado_06>N/A</personalizado_06>"
                        sXML &= "                       <precioUnitario>" & oRecordSet.Fields.Item("PriceBefDi").Value & "</precioUnitario>"
                        sXML &= "                       <tipoProducto>B</tipoProducto>"
                        sXML &= "                       <unidadMedida>LBS</unidadMedida>"
                        sXML &= "                   </detalleDte>"
                        sXML &= "                   <detalleImpuestosIva>24.0</detalleImpuestosIva>"
                        sXML &= "                   <direccionComercialComprador>Ciudad</direccionComercialComprador>"
                        sXML &= "                   <direccionComercialVendedor>Ciudad</direccionComercialVendedor>"
                        sXML &= "                   <estadoDocumento>ACTIVO</estadoDocumento>"
                        sXML &= "                   <fechaAnulacion>" & CDate(oRecordSet.Fields.Item("DocDueDate").Value).ToString("yyyy-MM-dd") & "</fechaAnulacion>"
                        sXML &= "                   <fechaDocumento>" & CDate(oRecordSet.Fields.Item("TaxDate").Value).ToString("yyyy-MM-dd") & "</fechaDocumento>"
                        sXML &= "                   <fechaResolucion>2018-02-22</fechaResolucion>"
                        sXML &= "                   <idDispositivo>001</idDispositivo>"
                        sXML &= "                   <importeBruto>" & oRecordSet.Fields.Item("DocTotal").Value & "</importeBruto>"
                        sXML &= "                   <importeDescuento>0.0</importeDescuento>"
                        sXML &= "                   <importeNetoGravado>" & oRecordSet.Fields.Item("PriceAfVAT").Value & "</importeNetoGravado>"
                        sXML &= "                   <importeOtrosImpuestos>0.0</importeOtrosImpuestos>"
                        sXML &= "                   <importeTotalExento>0.0</importeTotalExento>"
                        sXML &= "                   <montoTotalOperacion>" & oRecordSet.Fields.Item("DocTotal").Value & "</montoTotalOperacion>"
                        sXML &= "                   <municipioComprador>Guatemala</municipioComprador>"
                        sXML &= "                   <municipioVendedor>Guatemala</municipioVendedor>"
                        sXML &= "                   <nitComprador>C/F</nitComprador>"
                        sXML &= "                   <nitGFACE>12521337</nitGFACE>"
                        sXML &= "                   <nitVendedor>C/F</nitVendedor>"
                        sXML &= "                   <nombreComercialComprador>INFORUM PRUEBAS</nombreComercialComprador>"
                        sXML &= "                   <nombreComercialRazonSocialVendedor>INFORUM PRUEBAS</nombreComercialRazonSocialVendedor>"
                        sXML &= "                   <nombreCompletoVendedor>INFORUM PRUEBAS</nombreCompletoVendedor>"
                        sXML &= "                   <numeroDocumento>" & oRecordSet.Fields.Item("DocNum").Value & "</numeroDocumento>"
                        sXML &= "                   <numeroResolucion>253322020181</numeroResolucion>"
                        sXML &= "                   <observaciones>" & oRecordSet.Fields.Item("Comments").Value & "</observaciones>"
                        sXML &= "                   <personalizado_01>N/A</personalizado_01>"
                        sXML &= "                   <personalizado_02>N/A</personalizado_02>"
                        sXML &= "                   <personalizado_03>N/A</personalizado_03>"
                        sXML &= "                   <personalizado_04>N/A</personalizado_04>"
                        sXML &= "                   <personalizado_05>N/A</personalizado_05>"
                        sXML &= "                   <personalizado_06>N/A</personalizado_06>"
                        sXML &= "                   <personalizado_07>N/A</personalizado_07>"
                        sXML &= "                   <personalizado_08>N/A</personalizado_08>"
                        sXML &= "                   <personalizado_09>N/A</personalizado_09>"
                        sXML &= "                   <personalizado_10>N/A</personalizado_10>"
                        sXML &= "                   <personalizado_11>N/A</personalizado_11>"
                        sXML &= "                   <personalizado_12>N/A</personalizado_12>"
                        sXML &= "                   <personalizado_13>N/A</personalizado_13>"
                        sXML &= "                   <personalizado_14>N/A</personalizado_14>"
                        sXML &= "                   <personalizado_15>N/A</personalizado_15>"
                        sXML &= "                   <personalizado_16>N/A</personalizado_16>"
                        sXML &= "                   <personalizado_17>N/A</personalizado_17>"
                        sXML &= "                   <personalizado_18>N/A</personalizado_18>"
                        sXML &= "                   <personalizado_19>N/A</personalizado_19>"
                        sXML &= "                   <personalizado_20>N/A</personalizado_20>"
                        sXML &= "                   <regimen2989>1</regimen2989>"
                        sXML &= "                   <regimenISR>RET_DEFINITIVA</regimenISR>"
                        sXML &= "                   <serieAutorizada>FC</serieAutorizada>"
                        sXML &= "                   <serieDocumento>63</serieDocumento>"
                        sXML &= "                   <telefonoComprador>N/A</telefonoComprador>"
                        sXML &= "                   <tipoCambio>1.0</tipoCambio>"
                        sXML &= "                   <tipoDocumento>FACE</tipoDocumento>"
                        sXML &= "               </dte>"
                        sXML &= "               <usuario>INFORUMPRU</usuario>"
                        sXML &= "               <validador>False</validador>"
                        sXML &= "          </dte>"
                        sXML &= "       </ns2:registrarDte>"
                        sXML &= "   </S:Body>"
                        sXML &= "</S:Envelope>"

                        oXML.LoadXml(sXML)
                        oXML.Save("C:\Factura # " & oRecordSet.Fields.Item("DocNum").Value & ".XML")
                        sUrl = "https://www.ingface.net:443/listener/ingface"
                        oXMLRet = PostXMLTransaction(sUrl, oXML, "")
                        oXMLRet.Save("C:\Factura # " & oRecordSet.Fields.Item("DocNum").Value & "_Respuesta.XML")

                        xmlNodeRdr = New XmlNodeReader(oXMLRet)
                        dsGenerarGuia = New DataSet()
                        dsGenerarGuia.ReadXml(xmlNodeRdr)
                        Dim nCae As String
                        nCae = dsGenerarGuia.Tables.Item("return").Rows.Item(0).Item(3).ToString()

                        Dim UrlPDF As String = "https://www.ingface.net/Ingfacereport/dtefactura.jsp?cae=" & nCae
                        HttpReq = DirectCast(WebRequest.Create(UrlPDF), HttpWebRequest)

                        Try
                            Using HttpResponse As HttpWebResponse = DirectCast(HttpReq.GetResponse(), HttpWebResponse)
                                Using Reader As New BinaryReader(HttpResponse.GetResponseStream())
                                    Dim RdByte As Byte() = Reader.ReadBytes(1 * 1024 * 1024 * 10)
                                    oRutaPdf = "C:\Factura_" & oRecordSet.Fields.Item("DocNum").Value & ".pdf"
                                    Using FStream As New FileStream(oRutaPdf, FileMode.Create)
                                        FStream.Write(RdByte, 0, RdByte.Length)
                                        FStream.Close()

                                        Dim MyProcess As New Process
                                        MyProcess.StartInfo.CreateNoWindow = False
                                        MyProcess.StartInfo.Verb = "print"

                                        'HERE IS WHERE I WANT TO CHANGE THE PRINTER (BUT THIS COMMAND IS IGNORED)


                                        MyProcess.StartInfo.UseShellExecute = True
                                        MyProcess.StartInfo.FileName = oRutaPdf
                                        MyProcess.Start()
                                        MyProcess.WaitForExit(10000)
                                        MyProcess.CloseMainWindow()
                                        MyProcess.Close()

                                        'Dim ruta As String = oRutaPdf
                                        'Dim PrintTextFile As New ProcessStartInfo
                                        'PrintTextFile.UseShellExecute = True
                                        'PrintTextFile.Verb = "print"
                                        'PrintTextFile.WindowStyle = ProcessWindowStyle.Hidden
                                        'PrintTextFile.FileName = ruta
                                        'Process.Start(PrintTextFile)




                                        ''stream = New StreamReader(oRutaPdf)
                                        'Dim printer As New PrintDocument()
                                        'Dim instance As New Drawing.Printing.PrinterSettings
                                        'Dim impresosaPredt As String = instance.PrinterName
                                        'printer.PrinterSettings.PrinterName = impresosaPredt
                                        'printer.PrinterSettings.PrintFileName = oRutaPdf

                                        'printer.PrinterSettings.Copies = 1
                                        'printer.Print()

                                    End Using
                                End Using
                            End Using

                        Catch ex As Exception
                            MsgBox(ex.Message)
                        End Try
                    End If
                End If


            Catch ex As Exception
                MsgBox(ex.Message)
            End Try


        End Sub
        Private Function GetValor(nodoPadre As Xml.XmlNode, clave As String) As Object
            Dim valor As Xml.XmlNode = nodoPadre.SelectSingleNode(clave)
            Return valor.LastChild.Value
        End Function


        Public Function PostXMLTransaction(v_strURL As String, v_objXMLDoc As XmlDocument, sToken As String) As XmlDocument
            'Declare XMLResponse document
            Dim XMLResponse As XmlDocument = Nothing

            'Declare an HTTP-specific implementation of the WebRequest class.
            Dim objHttpWebRequest As HttpWebRequest

            'Declare an HTTP-specific implementation of the WebResponse class
            Dim objHttpWebResponse As HttpWebResponse = Nothing

            'Declare a generic view of a sequence of bytes
            Dim objRequestStream As Stream = Nothing
            Dim objResponseStream As Stream = Nothing

            'Declare XMLReader
            Dim objXMLReader As XmlTextReader

            'Creates an HttpWebRequest for the specified URL.
            objHttpWebRequest = DirectCast(WebRequest.Create(v_strURL), HttpWebRequest)

            Dim sMensaje As String = ""
            Dim sLinea_Log As String = ""

            Try
                '---------- Start HttpRequest 

                If sToken <> "" Then
                    'Http Headers
                    objHttpWebRequest.Headers.Add("token", sToken)
                    'objHttpWebRequest.Headers.Add("instance", Obtiene_Valor_Parametro("312"))
                End If

                'Set HttpWebRequest properties
                Dim bytes As Byte()
                bytes = System.Text.Encoding.ASCII.GetBytes(v_objXMLDoc.InnerXml)
                objHttpWebRequest.Method = "POST"
                objHttpWebRequest.ContentLength = bytes.Length
                objHttpWebRequest.ContentType = "text/xml; encoding='utf-8'"

                ''Get Stream object 
                objRequestStream = objHttpWebRequest.GetRequestStream()

                ''Writes a sequence of bytes to the current stream 
                objRequestStream.Write(bytes, 0, bytes.Length)

                ''Close stream
                objRequestStream.Close()

                '---------- End HttpRequest

                'Sends the HttpWebRequest, and waits for a response.
                objHttpWebResponse = DirectCast(objHttpWebRequest.GetResponse(), HttpWebResponse)

                '---------- Start HttpResponse
                If objHttpWebResponse.StatusCode = HttpStatusCode.OK Then
                    'Get response stream 
                    objResponseStream = objHttpWebResponse.GetResponseStream()

                    'Load response stream into XMLReader
                    objXMLReader = New XmlTextReader(objResponseStream)

                    'Declare XMLDocument
                    Dim xmldoc As New XmlDocument()
                    xmldoc.Load(objXMLReader)

                    'Set XMLResponse object returned from XMLReader
                    XMLResponse = xmldoc

                    'Close XMLReader
                    objXMLReader.Close()
                End If

                'Close HttpWebResponse
                objHttpWebResponse.Close()
            Catch we As WebException
                'TODO: Add custom exception handling
                'Throw New Exception(we.Message)

                'If oEjecucion.IniciaMinimizado = "N" Then MsgBox(sMensaje) ' Display error message

                sLinea_Log = "Error en llamada a webservices: [" & we.Message & "]"

                B1Connections.theAppl.SetStatusBarMessage(sLinea_Log, BoMessageTime.bmt_Short, True)
            Catch ex As Exception
                'Throw New Exception(ex.Message)

                'If oEjecucion.IniciaMinimizado = "N" Then MsgBox(sMensaje) ' Display error message

                sLinea_Log = "Error en llamada a webservices: [" & ex.Message & "]"
                B1Connections.theAppl.SetStatusBarMessage(sLinea_Log, BoMessageTime.bmt_Short, True)

            Finally
                'Close connections
                objRequestStream.Close()
                objResponseStream.Close()
                objHttpWebResponse.Close()

                'Release objects
                objXMLReader = Nothing
                objRequestStream = Nothing
                objResponseStream = Nothing
                objHttpWebResponse = Nothing
                objHttpWebRequest = Nothing
            End Try

            'Return
            Return XMLResponse
        End Function
    End Class
End Namespace
